; Engine configuration file.
; It's best edited using the editor UI and not directly,
; since the parameters that go here are not all obvious.
;
; Format:
;   [section] ; section goes between []
;   param=value ; assign values to parameters

config_version=4

_global_script_classes=[ {
"base": "RigidBody2D",
"class": "Bubble",
"language": "GDScript",
"path": "res://scripts/Bubble.gd"
}, {
"base": "Button",
"class": "GlowingButton",
"language": "GDScript",
"path": "res://scripts/GlowingButton.gd"
}, {
"base": "Control",
"class": "GlowingControl",
"language": "GDScript",
"path": "res://scripts/GlowingControl.gd"
}, {
"base": "Reference",
"class": "Node2DShaker",
"language": "GDScript",
"path": "res://harmonic-godot/node2d-shaker/Node2DShaker.gd"
}, {
"base": "Control",
"class": "Puzzle",
"language": "GDScript",
"path": "res://scripts/Puzzle.gd"
}, {
"base": "Node",
"class": "PuzzleData",
"language": "GDScript",
"path": "res://scripts/PuzzleData.gd"
}, {
"base": "Node",
"class": "PuzzleMasks",
"language": "GDScript",
"path": "res://scripts/PuzzleMasks.gd"
}, {
"base": "TextureRect",
"class": "PuzzlePiece",
"language": "GDScript",
"path": "res://scripts/PuzzlePiece.gd"
}, {
"base": "Control",
"class": "PuzzleSelectButton",
"language": "GDScript",
"path": "res://scripts/PuzzleSelectButton.gd"
}, {
"base": "Reference",
"class": "SiteLock",
"language": "GDScript",
"path": "res://harmonic-godot/site-lock/SiteLock.gd"
}, {
"base": "Reference",
"class": "SiteLockUrls",
"language": "GDScript",
"path": "res://scripts/SiteLockUrls.gd"
} ]
_global_script_class_icons={
"Bubble": "",
"GlowingButton": "",
"GlowingControl": "",
"Node2DShaker": "",
"Puzzle": "",
"PuzzleData": "",
"PuzzleMasks": "",
"PuzzlePiece": "",
"PuzzleSelectButton": "",
"SiteLock": "",
"SiteLockUrls": ""
}

[application]

config/name="Puzzles for POD"
run/main_scene="res://scenes/intro-scene.tscn"
boot_splash/image="res://harmonic-godot/sprites/white-pixel.png"
boot_splash/bg_color=Color( 1, 1, 1, 1 )
config/icon="res://publish/icon_1024.png"

[autoload]

ScreenTransitioner="*res://harmonic-godot/singletons/ScreenTransitioner.tscn"
AudioPlayer="*res://harmonic-godot/singletons/AudioPlayer.gd"
Init="res://scripts/Init.gd"
SaveData="*res://scripts/SaveData.gd"
MusicPlayer="res://scenes/music-player.tscn"
analytics="*res://analytics/analytics.gd"

[debug]

gdscript/completion/autocomplete_setters_and_getters=true

[display]

window/size/height=768
window/dpi/allow_hidpi=true
window/handheld/orientation="sensor_landscape"
window/stretch/mode="2d"
window/stretch/aspect="expand"

[importer_defaults]

texture={
"compress/bptc_ldr": 0,
"compress/hdr_mode": 0,
"compress/lossy_quality": 0.7,
"compress/mode": 0,
"compress/normal_map": 0,
"detect_3d": false,
"flags/anisotropic": false,
"flags/filter": false,
"flags/mipmaps": false,
"flags/repeat": 0,
"flags/srgb": 2,
"process/HDR_as_SRGB": false,
"process/fix_alpha_border": true,
"process/invert_color": false,
"process/premult_alpha": false,
"size_limit": 0,
"stream": false,
"svg/scale": 1.0
}
wav={
"compress/mode": 0,
"edit/loop": false,
"edit/normalize": false,
"edit/trim": false,
"force/8_bit": false,
"force/max_rate": false,
"force/max_rate_hz": 44100,
"force/mono": false
}

[input]

ui_focus_next={
"deadzone": 0.5,
"events": [  ]
}
ui_focus_prev={
"deadzone": 0.5,
"events": [  ]
}
ui_page_up={
"deadzone": 0.5,
"events": [  ]
}
ui_page_down={
"deadzone": 0.5,
"events": [  ]
}
ui_home={
"deadzone": 0.5,
"events": [  ]
}
ui_end={
"deadzone": 0.5,
"events": [  ]
}

[input_devices]

pointing/emulate_touch_from_mouse=true

[rendering]

quality/driver/driver_name="GLES2"
quality/intended_usage/framebuffer_allocation=0
quality/intended_usage/framebuffer_allocation.mobile=0
vram_compression/import_etc=true
quality/shadows/filter_mode.mobile=1
quality/dynamic_fonts/use_oversampling=false
